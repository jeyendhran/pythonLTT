Python is a multi-paradigm programming language. Object-oriented programming and structured programming are fully supported, and many of its features support functional programming and aspect-oriented programming (including by metaprogramming[43] and metaobjects (magic methods)).[44] Many other paradigms are supported via extensions, including design by contract[45][46] and logic programming.




Python uses dynamic typing, and a combination of reference counting and a cycle-detecting garbage collector for memory management. It also features dynamic name resolution (late binding), which binds method and variable names during program execution.







Python's design offers some support for functional programming in the Lisp tradition. It has filter(), map(), and reduce() functions; list comprehensions, dictionaries, and sets; and generator expressions.[48] The standard library has two modules (itertools and functools) that implement functional tools borrowed from Haskell and Standard ML.
